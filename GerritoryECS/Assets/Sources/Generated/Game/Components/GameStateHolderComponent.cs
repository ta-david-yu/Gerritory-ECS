//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public StateHolderComponent StateHolder { get { return (StateHolderComponent)GetComponent(GameComponentsLookup.StateHolder); } }
	public bool HasStateHolder { get { return HasComponent(GameComponentsLookup.StateHolder); } }

	public void AddStateHolder(int newId)
	{
		var index = GameComponentsLookup.StateHolder;
		var component = (StateHolderComponent)CreateComponent(index, typeof(StateHolderComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.Id = newId;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceStateHolder(int newId)
	{
		var index = GameComponentsLookup.StateHolder;
		var component = (StateHolderComponent)CreateComponent(index, typeof(StateHolderComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.Id = newId;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyStateHolderTo(StateHolderComponent copyComponent)
	{
		var index = GameComponentsLookup.StateHolder;
		var component = (StateHolderComponent)CreateComponent(index, typeof(StateHolderComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.Id = copyComponent.Id;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveStateHolder()
	{
		RemoveComponent(GameComponentsLookup.StateHolder);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherStateHolder;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> StateHolder
	{
		get
		{
			if (_matcherStateHolder == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.StateHolder);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherStateHolder = matcher;
			}

			return _matcherStateHolder;
		}
	}
}
