//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed class OwnerAddedEventSystem : JCMG.EntitasRedux.ReactiveSystem<TileEntity>
{
	readonly System.Collections.Generic.List<IOwnerAddedListener> _listenerBuffer;

	public OwnerAddedEventSystem(Contexts contexts) : base(contexts.Tile)
	{
		_listenerBuffer = new System.Collections.Generic.List<IOwnerAddedListener>();
	}

	protected override JCMG.EntitasRedux.ICollector<TileEntity> GetTrigger(JCMG.EntitasRedux.IContext<TileEntity> context)
	{
		return JCMG.EntitasRedux.CollectorContextExtension.CreateCollector(
			context,
			JCMG.EntitasRedux.TriggerOnEventMatcherExtension.Added(TileMatcher.Owner)
		);
	}

	protected override bool Filter(TileEntity entity)
	{
		return entity.HasOwner && entity.HasOwnerAddedListener;
	}

	protected override void Execute(System.Collections.Generic.List<TileEntity> entities)
	{
		foreach (var e in entities)
		{
			var component = e.Owner;
			_listenerBuffer.Clear();
			_listenerBuffer.AddRange(e.OwnerAddedListener.value);
			foreach (var listener in _listenerBuffer)
			{
				listener.OnOwnerAdded(e, component.OwnerTeamId);
			}
		}
	}
}
