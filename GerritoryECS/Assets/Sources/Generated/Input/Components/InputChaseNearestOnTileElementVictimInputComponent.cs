//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity
{
	public ChaseNearestOnTileElementVictimInputComponent ChaseNearestOnTileElementVictimInput { get { return (ChaseNearestOnTileElementVictimInputComponent)GetComponent(InputComponentsLookup.ChaseNearestOnTileElementVictimInput); } }
	public bool HasChaseNearestOnTileElementVictimInput { get { return HasComponent(InputComponentsLookup.ChaseNearestOnTileElementVictimInput); } }

	public void AddChaseNearestOnTileElementVictimInput(int newControllingElementId, int newMaxSearchHeuristicDistance, AIHelper.PathfindingSimulationState newPathfindingSimulationState)
	{
		var index = InputComponentsLookup.ChaseNearestOnTileElementVictimInput;
		var component = (ChaseNearestOnTileElementVictimInputComponent)CreateComponent(index, typeof(ChaseNearestOnTileElementVictimInputComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.ControllingElementId = newControllingElementId;
		component.MaxSearchHeuristicDistance = newMaxSearchHeuristicDistance;
		component.PathfindingSimulationState = newPathfindingSimulationState;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceChaseNearestOnTileElementVictimInput(int newControllingElementId, int newMaxSearchHeuristicDistance, AIHelper.PathfindingSimulationState newPathfindingSimulationState)
	{
		var index = InputComponentsLookup.ChaseNearestOnTileElementVictimInput;
		var component = (ChaseNearestOnTileElementVictimInputComponent)CreateComponent(index, typeof(ChaseNearestOnTileElementVictimInputComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.ControllingElementId = newControllingElementId;
		component.MaxSearchHeuristicDistance = newMaxSearchHeuristicDistance;
		component.PathfindingSimulationState = newPathfindingSimulationState;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyChaseNearestOnTileElementVictimInputTo(ChaseNearestOnTileElementVictimInputComponent copyComponent)
	{
		var index = InputComponentsLookup.ChaseNearestOnTileElementVictimInput;
		var component = (ChaseNearestOnTileElementVictimInputComponent)CreateComponent(index, typeof(ChaseNearestOnTileElementVictimInputComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.ControllingElementId = copyComponent.ControllingElementId;
		component.MaxSearchHeuristicDistance = copyComponent.MaxSearchHeuristicDistance;
		component.PathfindingSimulationState = copyComponent.PathfindingSimulationState;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveChaseNearestOnTileElementVictimInput()
	{
		RemoveComponent(InputComponentsLookup.ChaseNearestOnTileElementVictimInput);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher
{
	static JCMG.EntitasRedux.IMatcher<InputEntity> _matcherChaseNearestOnTileElementVictimInput;

	public static JCMG.EntitasRedux.IMatcher<InputEntity> ChaseNearestOnTileElementVictimInput
	{
		get
		{
			if (_matcherChaseNearestOnTileElementVictimInput == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<InputEntity>)JCMG.EntitasRedux.Matcher<InputEntity>.AllOf(InputComponentsLookup.ChaseNearestOnTileElementVictimInput);
				matcher.ComponentNames = InputComponentsLookup.ComponentNames;
				_matcherChaseNearestOnTileElementVictimInput = matcher;
			}

			return _matcherChaseNearestOnTileElementVictimInput;
		}
	}
}
