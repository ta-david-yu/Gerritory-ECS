//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

	public ConfigEntity MatchConfigEntity { get { return GetGroup(ConfigMatcher.MatchConfig).GetSingleEntity(); } }
	public MatchConfigComponent MatchConfig { get { return MatchConfigEntity.MatchConfig; } }
	public bool HasMatchConfig { get { return MatchConfigEntity != null; } }

	public ConfigEntity SetMatchConfig(IMatchConfig newValue)
	{
		if (HasMatchConfig)
		{
			throw new JCMG.EntitasRedux.EntitasReduxException(
				"Could not set MatchConfig!\n" +
				this +
				" already has an entity with MatchConfigComponent!",
				"You should check if the context already has a MatchConfigEntity before setting it or use context.ReplaceMatchConfig().");
		}
		var entity = CreateEntity();
		#if !ENTITAS_REDUX_NO_IMPL
		entity.AddMatchConfig(newValue);
		#endif
		return entity;
	}

	public void ReplaceMatchConfig(IMatchConfig newValue)
	{
		#if !ENTITAS_REDUX_NO_IMPL
		var entity = MatchConfigEntity;
		if (entity == null)
		{
			entity = SetMatchConfig(newValue);
		}
		else
		{
			entity.ReplaceMatchConfig(newValue);
		}
		#endif
	}

	public void RemoveMatchConfig()
	{
		MatchConfigEntity.Destroy();
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity
{
	public MatchConfigComponent MatchConfig { get { return (MatchConfigComponent)GetComponent(ConfigComponentsLookup.MatchConfig); } }
	public bool HasMatchConfig { get { return HasComponent(ConfigComponentsLookup.MatchConfig); } }

	public void AddMatchConfig(IMatchConfig newValue)
	{
		var index = ConfigComponentsLookup.MatchConfig;
		var component = (MatchConfigComponent)CreateComponent(index, typeof(MatchConfigComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceMatchConfig(IMatchConfig newValue)
	{
		var index = ConfigComponentsLookup.MatchConfig;
		var component = (MatchConfigComponent)CreateComponent(index, typeof(MatchConfigComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyMatchConfigTo(MatchConfigComponent copyComponent)
	{
		var index = ConfigComponentsLookup.MatchConfig;
		var component = (MatchConfigComponent)CreateComponent(index, typeof(MatchConfigComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveMatchConfig()
	{
		RemoveComponent(ConfigComponentsLookup.MatchConfig);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher
{
	static JCMG.EntitasRedux.IMatcher<ConfigEntity> _matcherMatchConfig;

	public static JCMG.EntitasRedux.IMatcher<ConfigEntity> MatchConfig
	{
		get
		{
			if (_matcherMatchConfig == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<ConfigEntity>)JCMG.EntitasRedux.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.MatchConfig);
				matcher.ComponentNames = ConfigComponentsLookup.ComponentNames;
				_matcherMatchConfig = matcher;
			}

			return _matcherMatchConfig;
		}
	}
}
