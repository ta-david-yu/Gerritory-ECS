//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelContext {

	public LevelEntity OnTileElementIdCounterEntity { get { return GetGroup(LevelMatcher.OnTileElementIdCounter).GetSingleEntity(); } }
	public OnTileElementIdCounterComponent OnTileElementIdCounter { get { return OnTileElementIdCounterEntity.OnTileElementIdCounter; } }
	public bool HasOnTileElementIdCounter { get { return OnTileElementIdCounterEntity != null; } }

	public LevelEntity SetOnTileElementIdCounter(UniqueIdCounter newValue)
	{
		if (HasOnTileElementIdCounter)
		{
			throw new JCMG.EntitasRedux.EntitasReduxException(
				"Could not set OnTileElementIdCounter!\n" +
				this +
				" already has an entity with OnTileElementIdCounterComponent!",
				"You should check if the context already has a OnTileElementIdCounterEntity before setting it or use context.ReplaceOnTileElementIdCounter().");
		}
		var entity = CreateEntity();
		#if !ENTITAS_REDUX_NO_IMPL
		entity.AddOnTileElementIdCounter(newValue);
		#endif
		return entity;
	}

	public void ReplaceOnTileElementIdCounter(UniqueIdCounter newValue)
	{
		#if !ENTITAS_REDUX_NO_IMPL
		var entity = OnTileElementIdCounterEntity;
		if (entity == null)
		{
			entity = SetOnTileElementIdCounter(newValue);
		}
		else
		{
			entity.ReplaceOnTileElementIdCounter(newValue);
		}
		#endif
	}

	public void RemoveOnTileElementIdCounter()
	{
		OnTileElementIdCounterEntity.Destroy();
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelEntity
{
	public OnTileElementIdCounterComponent OnTileElementIdCounter { get { return (OnTileElementIdCounterComponent)GetComponent(LevelComponentsLookup.OnTileElementIdCounter); } }
	public bool HasOnTileElementIdCounter { get { return HasComponent(LevelComponentsLookup.OnTileElementIdCounter); } }

	public void AddOnTileElementIdCounter(UniqueIdCounter newValue)
	{
		var index = LevelComponentsLookup.OnTileElementIdCounter;
		var component = (OnTileElementIdCounterComponent)CreateComponent(index, typeof(OnTileElementIdCounterComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceOnTileElementIdCounter(UniqueIdCounter newValue)
	{
		var index = LevelComponentsLookup.OnTileElementIdCounter;
		var component = (OnTileElementIdCounterComponent)CreateComponent(index, typeof(OnTileElementIdCounterComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyOnTileElementIdCounterTo(OnTileElementIdCounterComponent copyComponent)
	{
		var index = LevelComponentsLookup.OnTileElementIdCounter;
		var component = (OnTileElementIdCounterComponent)CreateComponent(index, typeof(OnTileElementIdCounterComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveOnTileElementIdCounter()
	{
		RemoveComponent(LevelComponentsLookup.OnTileElementIdCounter);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LevelMatcher
{
	static JCMG.EntitasRedux.IMatcher<LevelEntity> _matcherOnTileElementIdCounter;

	public static JCMG.EntitasRedux.IMatcher<LevelEntity> OnTileElementIdCounter
	{
		get
		{
			if (_matcherOnTileElementIdCounter == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<LevelEntity>)JCMG.EntitasRedux.Matcher<LevelEntity>.AllOf(LevelComponentsLookup.OnTileElementIdCounter);
				matcher.ComponentNames = LevelComponentsLookup.ComponentNames;
				_matcherOnTileElementIdCounter = matcher;
			}

			return _matcherOnTileElementIdCounter;
		}
	}
}
