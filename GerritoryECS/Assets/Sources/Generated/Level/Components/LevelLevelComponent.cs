//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelContext {

	public LevelEntity LevelEntity { get { return GetGroup(LevelMatcher.Level).GetSingleEntity(); } }
	public LevelComponent Level { get { return LevelEntity.Level; } }
	public bool HasLevel { get { return LevelEntity != null; } }

	public LevelEntity SetLevel(LevelData newLevelData)
	{
		if (HasLevel)
		{
			throw new JCMG.EntitasRedux.EntitasReduxException(
				"Could not set Level!\n" +
				this +
				" already has an entity with LevelComponent!",
				"You should check if the context already has a LevelEntity before setting it or use context.ReplaceLevel().");
		}
		var entity = CreateEntity();
		#if !ENTITAS_REDUX_NO_IMPL
		entity.AddLevel(newLevelData);
		#endif
		return entity;
	}

	public void ReplaceLevel(LevelData newLevelData)
	{
		#if !ENTITAS_REDUX_NO_IMPL
		var entity = LevelEntity;
		if (entity == null)
		{
			entity = SetLevel(newLevelData);
		}
		else
		{
			entity.ReplaceLevel(newLevelData);
		}
		#endif
	}

	public void RemoveLevel()
	{
		LevelEntity.Destroy();
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelEntity
{
	public LevelComponent Level { get { return (LevelComponent)GetComponent(LevelComponentsLookup.Level); } }
	public bool HasLevel { get { return HasComponent(LevelComponentsLookup.Level); } }

	public void AddLevel(LevelData newLevelData)
	{
		var index = LevelComponentsLookup.Level;
		var component = (LevelComponent)CreateComponent(index, typeof(LevelComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.LevelData = newLevelData;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceLevel(LevelData newLevelData)
	{
		var index = LevelComponentsLookup.Level;
		var component = (LevelComponent)CreateComponent(index, typeof(LevelComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.LevelData = newLevelData;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyLevelTo(LevelComponent copyComponent)
	{
		var index = LevelComponentsLookup.Level;
		var component = (LevelComponent)CreateComponent(index, typeof(LevelComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.LevelData = copyComponent.LevelData;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveLevel()
	{
		RemoveComponent(LevelComponentsLookup.Level);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LevelMatcher
{
	static JCMG.EntitasRedux.IMatcher<LevelEntity> _matcherLevel;

	public static JCMG.EntitasRedux.IMatcher<LevelEntity> Level
	{
		get
		{
			if (_matcherLevel == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<LevelEntity>)JCMG.EntitasRedux.Matcher<LevelEntity>.AllOf(LevelComponentsLookup.Level);
				matcher.ComponentNames = LevelComponentsLookup.ComponentNames;
				_matcherLevel = matcher;
			}

			return _matcherLevel;
		}
	}
}
