//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using JCMG.EntitasRedux;

public static class LevelComponentsLookup
{
	public const int ConstructInputEntity = 0;
	public const int ConstructPlayer = 1;
	public const int ConstructTile = 2;
	public const int GameInfo = 3;
	public const int GameTimer = 4;
	public const int ItemEaterIdCounter = 5;
	public const int OnTileElementIdCounter = 6;
	public const int StateHolderIdCounter = 7;
	public const int TeamGameRanking = 8;
	public const int TeamInfo = 9;
	public const int TeamScore = 10;

	public const int TotalComponents = 11;

	public static readonly string[] ComponentNames =
	{
		"ConstructInputEntity",
		"ConstructPlayer",
		"ConstructTile",
		"GameInfo",
		"GameTimer",
		"ItemEaterIdCounter",
		"OnTileElementIdCounter",
		"StateHolderIdCounter",
		"TeamGameRanking",
		"TeamInfo",
		"TeamScore"
	};

	public static readonly System.Type[] ComponentTypes =
	{
		typeof(ConstructInputEntityComponent),
		typeof(ConstructPlayerComponent),
		typeof(ConstructTileComponent),
		typeof(GameInfoComponent),
		typeof(GameTimerComponent),
		typeof(ItemEaterIdCounterComponent),
		typeof(OnTileElementIdCounterComponent),
		typeof(StateHolderIdCounterComponent),
		typeof(TeamGameRankingComponent),
		typeof(TeamInfoComponent),
		typeof(TeamScoreComponent)
	};

	public static readonly Dictionary<Type, int> ComponentTypeToIndex = new Dictionary<Type, int>
	{
		{ typeof(ConstructInputEntityComponent), 0 },
		{ typeof(ConstructPlayerComponent), 1 },
		{ typeof(ConstructTileComponent), 2 },
		{ typeof(GameInfoComponent), 3 },
		{ typeof(GameTimerComponent), 4 },
		{ typeof(ItemEaterIdCounterComponent), 5 },
		{ typeof(OnTileElementIdCounterComponent), 6 },
		{ typeof(StateHolderIdCounterComponent), 7 },
		{ typeof(TeamGameRankingComponent), 8 },
		{ typeof(TeamInfoComponent), 9 },
		{ typeof(TeamScoreComponent), 10 }
	};

	/// <summary>
	/// Returns a component index based on the passed <paramref name="component"/> type; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="component"></param>
	public static int GetComponentIndex(IComponent component)
	{
		return GetComponentIndex(component.GetType());
	}

	/// <summary>
	/// Returns a component index based on the passed <paramref name="componentType"/>; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="componentType"></param>
	public static int GetComponentIndex(Type componentType)
	{
		return ComponentTypeToIndex.TryGetValue(componentType, out var index) ? index : -1;
	}
}
