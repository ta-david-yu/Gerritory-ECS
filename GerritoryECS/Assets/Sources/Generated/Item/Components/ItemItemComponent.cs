//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ItemEntity
{
	static readonly ItemComponent ItemComponent = new ItemComponent();

	public bool IsItem
	{
		get { return HasComponent(ItemComponentsLookup.Item); }
		set
		{
			if (value != IsItem)
			{
				var index = ItemComponentsLookup.Item;
				if (value)
				{
					var componentPool = GetComponentPool(index);
					var component = componentPool.Count > 0
							? componentPool.Pop()
							: ItemComponent;

					AddComponent(index, component);
				}
				else
				{
					RemoveComponent(index);
				}
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ItemMatcher
{
	static JCMG.EntitasRedux.IMatcher<ItemEntity> _matcherItem;

	public static JCMG.EntitasRedux.IMatcher<ItemEntity> Item
	{
		get
		{
			if (_matcherItem == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<ItemEntity>)JCMG.EntitasRedux.Matcher<ItemEntity>.AllOf(ItemComponentsLookup.Item);
				matcher.ComponentNames = ItemComponentsLookup.ComponentNames;
				_matcherItem = matcher;
			}

			return _matcherItem;
		}
	}
}
