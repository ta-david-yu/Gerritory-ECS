//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameFlowEntity
{
	static readonly SurvivalObjectiveComponent SurvivalObjectiveComponent = new SurvivalObjectiveComponent();

	public bool IsSurvivalObjective
	{
		get { return HasComponent(GameFlowComponentsLookup.SurvivalObjective); }
		set
		{
			if (value != IsSurvivalObjective)
			{
				var index = GameFlowComponentsLookup.SurvivalObjective;
				if (value)
				{
					var componentPool = GetComponentPool(index);
					var component = componentPool.Count > 0
							? componentPool.Pop()
							: SurvivalObjectiveComponent;

					AddComponent(index, component);
				}
				else
				{
					RemoveComponent(index);
				}
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameFlowMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameFlowEntity> _matcherSurvivalObjective;

	public static JCMG.EntitasRedux.IMatcher<GameFlowEntity> SurvivalObjective
	{
		get
		{
			if (_matcherSurvivalObjective == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameFlowEntity>)JCMG.EntitasRedux.Matcher<GameFlowEntity>.AllOf(GameFlowComponentsLookup.SurvivalObjective);
				matcher.ComponentNames = GameFlowComponentsLookup.ComponentNames;
				_matcherSurvivalObjective = matcher;
			}

			return _matcherSurvivalObjective;
		}
	}
}
