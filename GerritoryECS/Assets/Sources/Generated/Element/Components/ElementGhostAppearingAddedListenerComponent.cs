//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ElementEntity
{
	public GhostAppearingAddedListenerComponent GhostAppearingAddedListener { get { return (GhostAppearingAddedListenerComponent)GetComponent(ElementComponentsLookup.GhostAppearingAddedListener); } }
	public bool HasGhostAppearingAddedListener { get { return HasComponent(ElementComponentsLookup.GhostAppearingAddedListener); } }

	public void AddGhostAppearingAddedListener(System.Collections.Generic.List<IGhostAppearingAddedListener> newValue)
	{
		var index = ElementComponentsLookup.GhostAppearingAddedListener;
		var component = (GhostAppearingAddedListenerComponent)CreateComponent(index, typeof(GhostAppearingAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceGhostAppearingAddedListener(System.Collections.Generic.List<IGhostAppearingAddedListener> newValue)
	{
		var index = ElementComponentsLookup.GhostAppearingAddedListener;
		var component = (GhostAppearingAddedListenerComponent)CreateComponent(index, typeof(GhostAppearingAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyGhostAppearingAddedListenerTo(GhostAppearingAddedListenerComponent copyComponent)
	{
		var index = ElementComponentsLookup.GhostAppearingAddedListener;
		var component = (GhostAppearingAddedListenerComponent)CreateComponent(index, typeof(GhostAppearingAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveGhostAppearingAddedListener()
	{
		RemoveComponent(ElementComponentsLookup.GhostAppearingAddedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ElementMatcher
{
	static JCMG.EntitasRedux.IMatcher<ElementEntity> _matcherGhostAppearingAddedListener;

	public static JCMG.EntitasRedux.IMatcher<ElementEntity> GhostAppearingAddedListener
	{
		get
		{
			if (_matcherGhostAppearingAddedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<ElementEntity>)JCMG.EntitasRedux.Matcher<ElementEntity>.AllOf(ElementComponentsLookup.GhostAppearingAddedListener);
				matcher.ComponentNames = ElementComponentsLookup.ComponentNames;
				_matcherGhostAppearingAddedListener = matcher;
			}

			return _matcherGhostAppearingAddedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ElementEntity
{
	public void AddGhostAppearingAddedListener(IGhostAppearingAddedListener value)
	{
		var listeners = HasGhostAppearingAddedListener
			? GhostAppearingAddedListener.value
			: new System.Collections.Generic.List<IGhostAppearingAddedListener>();
		listeners.Add(value);
		ReplaceGhostAppearingAddedListener(listeners);
	}

	public void RemoveGhostAppearingAddedListener(IGhostAppearingAddedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = GhostAppearingAddedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveGhostAppearingAddedListener();
		}
		else
		{
			ReplaceGhostAppearingAddedListener(listeners);
		}
	}
}
