//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ElementEntity
{
	public GhostDisappearingAddedListenerComponent GhostDisappearingAddedListener { get { return (GhostDisappearingAddedListenerComponent)GetComponent(ElementComponentsLookup.GhostDisappearingAddedListener); } }
	public bool HasGhostDisappearingAddedListener { get { return HasComponent(ElementComponentsLookup.GhostDisappearingAddedListener); } }

	public void AddGhostDisappearingAddedListener(System.Collections.Generic.List<IGhostDisappearingAddedListener> newValue)
	{
		var index = ElementComponentsLookup.GhostDisappearingAddedListener;
		var component = (GhostDisappearingAddedListenerComponent)CreateComponent(index, typeof(GhostDisappearingAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceGhostDisappearingAddedListener(System.Collections.Generic.List<IGhostDisappearingAddedListener> newValue)
	{
		var index = ElementComponentsLookup.GhostDisappearingAddedListener;
		var component = (GhostDisappearingAddedListenerComponent)CreateComponent(index, typeof(GhostDisappearingAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyGhostDisappearingAddedListenerTo(GhostDisappearingAddedListenerComponent copyComponent)
	{
		var index = ElementComponentsLookup.GhostDisappearingAddedListener;
		var component = (GhostDisappearingAddedListenerComponent)CreateComponent(index, typeof(GhostDisappearingAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveGhostDisappearingAddedListener()
	{
		RemoveComponent(ElementComponentsLookup.GhostDisappearingAddedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ElementMatcher
{
	static JCMG.EntitasRedux.IMatcher<ElementEntity> _matcherGhostDisappearingAddedListener;

	public static JCMG.EntitasRedux.IMatcher<ElementEntity> GhostDisappearingAddedListener
	{
		get
		{
			if (_matcherGhostDisappearingAddedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<ElementEntity>)JCMG.EntitasRedux.Matcher<ElementEntity>.AllOf(ElementComponentsLookup.GhostDisappearingAddedListener);
				matcher.ComponentNames = ElementComponentsLookup.ComponentNames;
				_matcherGhostDisappearingAddedListener = matcher;
			}

			return _matcherGhostDisappearingAddedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ElementEntity
{
	public void AddGhostDisappearingAddedListener(IGhostDisappearingAddedListener value)
	{
		var listeners = HasGhostDisappearingAddedListener
			? GhostDisappearingAddedListener.value
			: new System.Collections.Generic.List<IGhostDisappearingAddedListener>();
		listeners.Add(value);
		ReplaceGhostDisappearingAddedListener(listeners);
	}

	public void RemoveGhostDisappearingAddedListener(IGhostDisappearingAddedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = GhostDisappearingAddedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveGhostDisappearingAddedListener();
		}
		else
		{
			ReplaceGhostDisappearingAddedListener(listeners);
		}
	}
}
